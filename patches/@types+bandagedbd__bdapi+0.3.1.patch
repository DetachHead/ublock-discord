diff --git a/node_modules/@types/bandagedbd__bdapi/index.d.ts b/node_modules/@types/bandagedbd__bdapi/index.d.ts
index 4f7c61a..ba2e36b 100644
--- a/node_modules/@types/bandagedbd__bdapi/index.d.ts
+++ b/node_modules/@types/bandagedbd__bdapi/index.d.ts
@@ -8,7 +8,85 @@
 import * as ReactInstance from 'react';
 import * as ReactDOMInstance from 'react-dom';
 
-export const BdApi: typeof BdApiModule;
+declare global {
+    const BdApi: typeof BdApiModule;
+    interface Window {
+        BdApi: typeof BdApiModule;
+    }
+    const global: Window;
+}
+
+/**
+ * Plugins must have a default export of a class that implements this interface
+ * @see https://github.com/BetterDiscord/BetterDiscord/wiki/Creating-Plugins
+ */
+export interface BdPlugin {
+    /**
+     * The name for the plugin to be displayed to the user in the plugins page and for internal settings to use.
+     *
+     * Note: This is no longer required if it is included in the meta.
+     * @returns {string} the name for the plugin.
+     */
+    getName?(): string;
+
+    /**
+     * The description of the plugin shown in the plugins page.
+     *
+     * Note: This is no longer required if it is included in the meta.
+     * @returns {string} the description of the plugin.
+     */
+    getDescription?(): string;
+
+    /**
+     * The version of the plugin displayed in the plugins page.
+     *
+     * Note: This is no longer required if it is included in the meta.
+     * @returns {string} the version of the plugin.
+     */
+    getVersion?(): string;
+
+    /**
+     * The author string for the plugin displayed in the plugins page.
+     *
+     * Note: This is no longer required if it is included in the meta.
+     * @returns {string} the author of the plugin.
+     */
+    getAuthor?(): string;
+
+    /**
+     * Called when the plugin is enabled or when it is loaded and was previously reloaded (such as discord start or reload).
+     */
+    start(): void;
+
+    /**
+     * Called when the plugin is disabled.
+     */
+    stop(): void;
+
+    /**
+     * Called when the user clicks on the settings button for the plugin. If this function is not implemented the button is not shown.
+     *
+     * Note: The button will be disabled if the plugin is disabled to avoid errors with not-started plugins.
+     */
+    getSettingsPanel?(): string;
+
+    /**
+     * Called when the plugin is loaded regardless of if it is enabled or disabled.
+     */
+    load?(): void;
+
+    /**
+     * Called on every mutation that occurs on the document. For more information on observers and mutations take a look at [MDN's documentation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver).
+     * @param e The mutation that occurred.
+     */
+    observer?(e: MutationRecord): void;
+
+    /**
+     * Called every time the user navigates such as changing channel, changing servers, changing to friends list, etc.
+     */
+    onSwitch?(): void;
+}
+
 
 /**
  * Function with no arguments and no return value that may be called to revert changes made by `monkeyPatch` method, restoring (unpatching) original method.
